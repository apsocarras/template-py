[project]
name = "{{cookiecutter.pkg_name}}"
version = "0.1.0"
description = "{{cookiecutter.proj_description}}"
readme = "README.md"
requires-python = ">={{cookiecutter.py_runtime}}"
dependencies = [
    "attrs>=25.3.0",
    "cattrs>=25.2.0",
    "python-json-logger>=3.3.0",
    {% if cookiecutter.ff_http -%}
    "httpx>=0.28.1",
    "functions-framework>=3.9.2",
    "functions-framework>=3.9.2",
    "google-cloud-pubsub>=2.31.1",
    "google-cloud-secret-manager>=2.24.0",
    "google-cloud-storage>=3.3.1",
    "google-events>=0.14.0",
    {%- endif -%}
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "debugpy>=1.8.16",
    "ipykernel>=6.30.1",
    "mypy>=1.17.1",
    "ruff>=0.12.11",
]

test = [
    "beartype>=0.21.0",
    "python-dotenv>=1.1.1",
    "coverage>=7.10.6",
    "hypothesis>=6.139.1",
    "hypothesis-jsonschema>=0.23.1",
    "mimesis>=18.0.0",
    "pytest>=8.4.1",
    "python-dotenv>=1.1.1",
]

docs = [
    "mkdocs>=1.6.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-material>=9.6.18",
    "mkdocs-section-index>=0.3.10",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.18.2",
    "pygments>=2.19.2",
    "pymdown-extensions>=10.16.1",
]

[tool.ruff]
extend-exclude = [
    "deprecated/", 
    "libs/",
]
unsafe-fixes = true
line-length = 88

target-version = "py{{ cookiecutter.py_runtime | string | replace('.', '') }}"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
quote-style = "double"
## indent-style = "double"
skip-magic-trailing-comma = false

[tool.mypy]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
no_implicit_reexport = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
disallow_any_unimported = true
warn_return_any = true
show_error_codes = true
exclude = "^(libs/|deprecated/)"

[[tool.mypy.overrides]]
module = ["requests", "yaml"]
ignore_missing_imports = true


[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore=[
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731"
]
future-annotations = true
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]